/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n     true ? // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return root.svg4everybody = factory();\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _svg4everybody = __webpack_require__(0);\n\nvar _svg4everybody2 = _interopRequireDefault(_svg4everybody);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _svg4everybody2.default)();\n\nwindow.addEventListener('load', function () {\n  //POLYFILLS\n  (function (ELEMENT) {\n    ELEMENT.matches = ELEMENT.matches || ELEMENT.mozMatchesSelector || ELEMENT.msMatchesSelector || ELEMENT.oMatchesSelector || ELEMENT.webkitMatchesSelector;\n    ELEMENT.closest = ELEMENT.closest || function closest(selector) {\n      if (!this) return null;\n      if (this.matches(selector)) return this;\n      if (!this.parentElement) {\n        return null;\n      } else return this.parentElement.closest(selector);\n    };\n  })(Element.prototype);\n  (function (arr) {\n    arr.forEach(function (item) {\n      if (item.hasOwnProperty('remove')) {\n        return;\n      }\n      Object.defineProperty(item, 'remove', {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: function remove() {\n          this.parentNode.removeChild(this);\n        }\n      });\n    });\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n  //UTILS\n  var makeArray = function makeArray(collection) {\n    var arr = [];\n    for (var i = 0; i < collection.length; i++) {\n      arr.push(collection[i]);\n    }return arr;\n  };\n  //BEGIN MODALS\n  (function () {\n    var OPEN = 'is-open';\n    var doc = document;\n    var modals = makeArray(doc.querySelectorAll('[data-modal]'));\n    var modalOpen = makeArray(doc.querySelectorAll('[data-modal-target]'));\n    var modalClose = makeArray(doc.querySelectorAll('[data-modal-close]'));\n\n    modalOpen.forEach(function (btn) {\n      var target = btn.dataset.modalTarget;\n      var currentModal = modals.filter(function (modal) {\n        return modal.dataset.modal === target;\n      })[0];\n\n      btn.addEventListener('click', function (e) {\n        e.preventDefault();\n        currentModal.classList.add(OPEN);\n      });\n    });\n\n    modalClose.forEach(function (btn) {\n      var target = btn.dataset.modalClose;\n      var currentModal = modals.filter(function (modal) {\n        return modal.dataset.modal === target;\n      })[0];\n\n      btn.addEventListener('click', function (e) {\n        e.preventDefault();\n        currentModal.classList.remove(OPEN);\n      });\n    });\n\n    modals.forEach(function (modal) {\n      return modal.addEventListener('click', function (e) {\n        var target = e.target;\n        if (target.closest('[data-modal-container]')) return;\n        modal.classList.remove(OPEN);\n      }, false);\n    });\n  })();\n  //END MODALS\n\n  //BEGIN STEPS\n  (function () {\n\n    var doc = document;\n    var steps = makeArray(doc.querySelectorAll('[data-step-state]'));\n    var buttons = makeArray(doc.querySelectorAll('[data-step-direction]'));\n    var progressLine = doc.querySelector('[data-step=\"line\"]');\n    var progressIn = doc.querySelector('[data-step=\"in\"]');\n    var max = steps.length;\n    var min = 1;\n    var percent = 100 / max;\n    var defaultActive = 1;\n    var current = defaultActive;\n\n    if (!steps.length) return;\n\n    var toggleButtonsState = function toggleButtonsState(state) {\n      return buttons.forEach(function (button) {\n        return button.disabled = state;\n      });\n    };\n    var setProgress = function setProgress() {\n      var lineX = 'translateX(-' + (100 - (percent * current - percent / 2)) + '%) translateX(13px)';\n      var inX = 'translateX(' + (100 - (percent * current - percent / 2)) + '%) translateX(-13px)';\n      progressLine.style.transform = lineX;\n      progressLine.style.webkitTransform = lineX;\n      progressIn.style.transform = inX;\n      progressIn.style.webkitTransform = inX;\n    };\n\n    var setState = function setState() {\n      setProgress();\n      steps.forEach(function (step, i) {\n        var number = +step.dataset.step;\n        if (number < current) step.dataset.stepState = 'done';\n        if (number > current) step.dataset.stepState = 'disabled';\n        if (number === current) step.dataset.stepState = 'active';\n      });\n    };\n\n    var goTo = {\n      next: function next() {\n        if (current >= max) return;\n        current++;\n        setState();\n      },\n      prev: function prev() {\n        if (current <= min) return;\n        current--;\n        setState();\n      },\n      currentStep: function currentStep(step) {\n        current = step;\n        setState();\n      }\n    };\n\n    //go to current step\n    buttons.forEach(function (button) {\n      return button.addEventListener('click', goTo[button.dataset.stepDirection], false);\n    });\n    steps.forEach(function (step) {\n      var target = +step.dataset.step;\n      step.addEventListener('click', function (e) {\n        e.preventDefault();\n        goTo.currentStep(target);\n      }, false);\n    });\n    setState(defaultActive);\n  })();\n  //END STEPS\n\n  //BEGIN RIPPLE EFFECT\n  (function () {\n\n    var isTouch = function isTouch() {\n      return 'touchstart' in window;\n    };\n    var eventName = isTouch() ? 'touchstart' : 'mousedown';\n    var properties = ['animationDuration', 'webkitAnimationDuration', 'msAnimationDuration', 'mozAnimationDuration', 'oAnimationDuration'];\n    var getDuration = function getDuration(el) {\n      var style = window.getComputedStyle(el),\n          duration = style.webkitTransitionDuration;\n\n      for (var i = 0; i <= properties.length; i++) {\n        var property = style[properties[i]];\n\n        if (!property) continue;\n\n        duration = property;\n        break;\n      }\n\n      // fix miliseconds vs seconds\n      duration = duration.indexOf('ms') > -1 ? parseFloat(duration) : parseFloat(duration) * 1000;\n\n      return duration;\n    };\n\n    var animation = function animation(e, target) {\n      var width = target.offsetWidth;\n      var height = target.offsetHeight;\n      var size = width >= height ? width : height;\n      var offset = target.getBoundingClientRect();\n      var pageX = e.type !== 'touchstart' ? e.pageX : e.touches[0].clientX;\n      var pageY = e.type !== 'touchstart' ? e.pageY : e.touches[0].clientY;\n      var x = pageX - offset.left;\n      var y = pageY - offset.top;\n\n      var circle = document.createElement('span');\n\n      circle.classList.add('ripple-circle');\n      circle.style.top = y - size / 2 + 'px';\n      circle.style.left = x - size / 2 + 'px';\n      circle.style.width = size + 'px';\n      circle.style.height = size + 'px';\n      target.appendChild(circle);\n\n      var duration = getDuration(circle);\n\n      var deleteCircle = setTimeout(function () {\n        return circle.remove();\n      }, duration + 50);\n      var animationEnd = function animationEnd(e) {\n        circle.remove();\n        clearTimeout(deleteCircle);\n      };\n\n      circle.addEventListener('animationend', animationEnd, false);\n      circle.addEventListener('webkitAnimationEnd', animationEnd, false);\n    };\n\n    document.addEventListener(eventName, function (e) {\n      var target = e.target.closest('[data-animation*=\"ripple\"]');\n      if (target) animation(e, target);\n    }, false);\n  })();\n  //END RIPPLE\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);